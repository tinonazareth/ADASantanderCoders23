/* Css responsivo*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
} /*Tira as margens padrão e preserva as dimenssões de caixas*/

/*Pesudo classe*/
:root {
    font-size: 62.5; 
} /* utilizando medidas em (rem) respeitando as preferências do usúario. Equivale a 10px no font-size */

nav {
    padding: 1rem;
}
.pseudo :visited {
    color: purple;
} /*Acrente um tag de link (a) e quando visitado mudara com a propiedade escolhida*/

.pseudo :hover {
    color: brown;
}/*Muda a propriedade ao passar o mouse*/

main {
    padding: 7rem 0;
}

.boxes {
    height: calc(100vh - 14rem);
    position: relative;

    display: flex;
    flex-flow: row wrap;
    justify-content: flex-start;
    align-items: center;
    gap: 0rem 2rem;
}

.box {
    min-height: 10rem;
    min-width: 20rem;
    padding: 1.5rem;
    border: 10px solid red;
    border-radius: 0.4rem;
    background-color: blue;
    color: #fff;
    font-size: 4rem;
    display: inline-block;
    flex: 1;
}

.box:nth-child(3) {
    order: 1 ;
}

/*data-atritub*/
[data-exemplo="products"] /*criando seus proprios atributos*/{

}

/*resolvendo problema de imagens em varios dispositivos diferentes*/
@media screen and (min-width: 768px) and (max-width:1024px) {
    
}

/*animação de elementos*/
[data-exemplo="products"] {
    background: #ffffff51;
    color: #fff;
    border: none;
    font-size: 2.6rem;
    padding: 0.6rem 2.4em;
    cursor: pointer;
    margin: auto;
    text-decoration: none;
    text-align: center;
    display: inline-block;
    transition: .2s ease-in-out;
    opacity: 0; /*Elemento some da tela mas continua ocupando espaço e o evento de mouse continua*/
    display: none; /*Elemento some da tela e não ocupa mais o espaço*/
    visibility: hidden; /* Elemento some da tela não tem mais o evento do mouse e continua ocupando espaço*/
}

[data-exemplo="products"] :hover {
    transform: scale(0.5);
}

/*Display grid*/
.boxes1 {
    height:  calc(100vh);
    position: relative;
    display: grid;
    justify-content: flex-start;
    gap: 2rem 5rem;
    grid-template-columns: 3fr repeat(2, 1fr);
    
}

main {
    grid-area: title;
}

aside {
    grid-area: login;
}

footer {
    grid-area: footer;
}

@media screen and (min-width: 1024px) {
    .page-content {
        height: 100vh;
        display: grid;
        gap: 10rem 0 ;
        grid-template-areas: 
            ". . . ." /*linha de respiro*/
            ". title login ."
            ". tile login ."
            ". .  login ."
            ". . . ."
            "footer footer footer footer"
        ;
    }
}

